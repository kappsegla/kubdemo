apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-test-service
spec:
  selector:
    app: spring-test-app
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: LoadBalancer # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: spring-test-app
spec:
  selector:
    matchLabels:
      app: spring-test-app
#  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: spring-test-app
    spec:
      containers:
        - resources:
            requests:
              memory: "200Mi"
              cpu: "200m"
            limits:
              memory: "200Mi"
          name: spring-test-app
          image: spring-boot-kube # Image that will be used to containers in the cluster
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          imagePullPolicy: Never
          ports:
            - containerPort: 8080 # The port that the container is running on in the cluster
